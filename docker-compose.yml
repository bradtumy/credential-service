services:

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: cred-service
      POSTGRES_PASSWORD: cred-service-1
      POSTGRES_DB: credential-service
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - cred-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "cred-service"]
      interval: 10s
      timeout: 5s
      retries: 5

  did-service:
    build:
      context: ./did-service
    container_name: did-service
    environment:
      DATABASE_URL: postgres://cred-service:cred-service-1@postgres:5432/credential-service
      PORT: 8080
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - cred-net
  
  issuer-service:
    build: 
      context: ./issuer-service
    container_name: issuer-service
    ports:
      - "8082:8080"
    environment:
      - DATABASE_URL=postgres://cred-service:cred-service-1@postgres:5432/credential-service
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
    depends_on:
      - postgres
    networks:
      - cred-net

  presentation-service:
    build:
      context: ./presentation-service
    container_name: presentation-service
    ports:
      - "8083:8080"
    environment:
      - DATABASE_URL=postgres://cred-service:cred-service-1@postgres:5432/credential-service
    depends_on:
      - postgres
    networks:
      - cred-net

  verification-service:
    build:
      context: ./verification-service
    container_name: verification-service
    ports:
      - "8084:8080"
    environment:
      - DATABASE_URL=postgres://cred-service:cred-service-1@postgres:5432/credential-service
    depends_on:
      - postgres
    networks:
      - cred-net

  holder-service:
    build:
      context: ./holder-service
    container_name: holder-service
    ports:
      - "8085:8080"
    networks:
      - cred-net
  
  # Add HashiCorp Vault service
  vault:
    image: vault:1.13.1
    container_name: vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root  # Development-only token
      VAULT_ADDR: http://127.0.0.1:8200
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    networks:
      - cred-net
    volumes:
      - ./vault:/vault/file  # Optional, for persisting Vault data in development
    command: server -dev  # Dev mode for testing, use production settings later
    depends_on:
      - postgres


networks:
  cred-net:

volumes:
  postgres_data:

